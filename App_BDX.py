import streamlit as st
import pandas as pd
import plotly.express as px
import folium
from streamlit_folium import st_folium
import branca.colormap as cm
import requests
import zipfile
import io
import plotly.express as px
import matplotlib.pyplot as plt
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.inspection import PartialDependenceDisplay
import shap
import joblib

# Ajouter un style CSS pour personnaliser les couleurs
def add_custom_styles():
    st.markdown(
        """
        <style>
        /* Couleur pour la barre lat√©rale */
        section[data-testid="stSidebar"] {
            background-color: #A8E6A3; /* Vert clair */
            color: black; /* Texte noir */
        }
        /* Alignement des √©l√©ments */
        .sidebar-content {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        /* Couleur des titres principaux */
        h1, h2, h3 {
            color: black;
        }
        </style>
        """,
        unsafe_allow_html=True
    )


# Appliquer le style personnalis√©
add_custom_styles()


 
# URLs des logos h√©berg√©s sur GitHub
logo_isup_url = "https://raw.githubusercontent.com/jeremyxu-pro/BDX_Project/main/DataViz/Logo-ISUP.jpg"
logo_gov_url = "https://raw.githubusercontent.com/jeremyxu-pro/BDX_Project/main/DataViz/gov.png"
 
 
try:
    # Charger le logo gov.br en haut, centr√©
    st.sidebar.markdown("<div style='text-align: center;'><img src='{}' width='100'></div>".format(logo_gov_url), unsafe_allow_html=True)

    # Ajouter le texte sous le logo gov.br
    st.sidebar.markdown("<h2 style='text-align: center; color: #004C29;'>Projet de Data Visualisation</h2>", unsafe_allow_html=True)
    st.sidebar.markdown("<h3 style='text-align: center; color: #004C29;'>Groupe BDX</h3>", unsafe_allow_html=True)
    st.sidebar.markdown("<p style='text-align: center; color: #004C29;'>BAENA Miguel</p>", unsafe_allow_html=True)
    st.sidebar.markdown("<p style='text-align: center; color: #004C29;'>DAKPOGAN Paul</p>", unsafe_allow_html=True)
    st.sidebar.markdown("<p style='text-align: center; color: #004C29;'>XU J√©r√©my</p>", unsafe_allow_html=True)

    # Ajouter le logo ISUP apr√®s les noms, centr√©
    st.sidebar.markdown("<div style='text-align: center;'><img src='{}' width='100'></div>".format(logo_isup_url), unsafe_allow_html=True)

except Exception as e:
    st.sidebar.error(f"Une erreur est survenue avec les logos : {e}")



# Charger les donn√©es
# Lien brut (raw)
zip_url = "https://raw.githubusercontent.com/jeremyxu-pro/BDX_Project/main/DataViz/datavis_long_lat_with_grupo.zip"
# T√©l√©charger et d√©compresser
response = requests.get(zip_url)
zip_file = zipfile.ZipFile(io.BytesIO(response.content))
 
# Lire un fichier CSV sp√©cifique √† l'int√©rieur du ZIP
with zip_file.open('datavis_long_lat_with_grupo.csv') as file:
    data = pd.read_csv(file)
 
try:
    

    # V√©rifiez si les colonnes n√©cessaires existent
    required_columns = ['Region_Name', 'ANO_MODELO_Class', 'COBERTURA', 'INDENIZ', 'AGE_Group', 'COD_MODELO', 'SEXO']
    if not all(col in data.columns for col in required_columns):
        st.error("Certaines colonnes n√©cessaires sont manquantes dans vos donn√©es.")
    else:
        # Configuration des onglets
        tabs = st.tabs(["Introduction", "Composition du Portefeuille", "Analyses", "Cartographie", "Outil de Tarification", "Interpr√©tations des Mod√®les"])

        # **Onglet 1 : Introduction**
        with tabs[0]:
            st.title("Introduction")
            st.markdown("""
            Bienvenue dans ce projet de **Data Visualisation** d√©velopp√© par le groupe **BDX**. 
            Ce tableau de bord interactif est con√ßu pour analyser et explorer des donn√©es d'assurance au Br√©sil. 
            Voici un aper√ßu des diff√©rents onglets disponibles dans cette application :

            ### **1. Composition du Portefeuille**
            - Analyse des caract√©ristiques principales des polices d'assurance, notamment :
                - La r√©partition des clients par tranche d'√¢ge et sexe.
                - La r√©partition des types de couverture.
                - Le nombre d'√©l√©ments dans chaque groupe de v√©hicules.

            ### **2. Analyses**
            - Exploration visuelle des donn√©es √† travers :
                - L'indemnit√© totale par type de v√©hicule ou par groupe.
                - Les relations entre les causes de sinistres et les indemnit√©s (boxplot).
                - La distribution des indemnit√©s par type de couverture.

            ### **3. Cartographie**
            - Visualisation dynamique des donn√©es g√©ographiques :
                - Carte des nombres de sinistres par r√©gion.
                - Carte des co√ªts d'indemnit√©s par r√©gion.

            ### **4. Outil de Tarification**
            - Impl√©mentation de deux mod√®les **XGBoost** pour pr√©dire la fr√©quence et la s√©v√©rit√© respectivement.
                        
            ### **5. Interpr√©tations Mod√®les**
            - Cet onglet fournit une analyse des mod√®les pr√©dictifs en utilisant des outils tels que :
                - Les graphiques **SHAP** (SHapley Additive exPlanations) pour interpr√©ter les contributions des variables au mod√®le.
        
            Ce tableau de bord est une d√©monstration de l'application des outils de **data science**, **mod√©lisation** et **visualisation** dans le domaine des assurances. 
            Prenez le temps d'explorer chaque onglet pour une meilleure compr√©hension des donn√©es et des r√©sultats. üéâ
            """)

        # **Onglet 2 : Composition du Portefeuille**
        with tabs[1]:
            st.title("Composition du Portefeuille")
        # **Onglet 3 : Analyse**
        with tabs[2]:
            st.title("Analyse des indemnit√©s")
        # **Onglet 4 : Cartographie**
        with tabs[3]:
            st.header("Visualisation du co√ªt des sinistres par √©tat")
        # **Onglet 6 : Tarification**
        with tabs[4]:
            st.markdown("""
            Cet onglet fournit un outil r√©alisant une tarification simplifi√©e selon une logique de fr√©quence-s√©v√©rit√© avec deux mod√®les XGBOOST.
            """)
            # **Onglet 5 : Interpretation Mod√®le**
        with tabs[5]:
            st.title("Interpretations des Mod√®les")
            st.markdown("""
            Cet onglet affiche les graphiques SHAP (SHapley Additive exPlanations) permettant d'interpr√©ter les contributions des variables dans nos deux mod√®les. Nous mettons en avant uniquement les 10 variables ayant les contributions les plus significatives. Veuillez noter ensuite l'outil d'analyse de d√©pendance SHAP o√π vous pouvez vous m√™me choisir le couple de classe √† √©tudier. Par ailleurs, il est important de noter que l'analyse est r√©alis√©e √† l'√©chelle des classes, afin d'√©viter toute compensation qui pourrait survenir en passant √† une √©chelle plus agr√©g√©e, soit celle des variables individuelles.
            """)
except FileNotFoundError:
    st.error(f"Fichier introuvable : {file_path}. V√©rifiez le chemin.")
except Exception as e:
    st.error(f"Une erreur est survenue : {e}")
